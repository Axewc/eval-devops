name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Run unit tests
      run: mvn test

    - name: Run SonarQube analysis
      uses: SonarSource/sonarcloud-github-action@master
      with:
        projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
        organization: ${{ secrets.SONAR_ORGANIZATION }}
        token: ${{ secrets.SONAR_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/microservicio:latest .
        echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" | docker login -u _json_key --password-stdin https://gcr.io
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/microservicio:latest

    - name: Deploy to Cloud Run
      env:
        PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      run: |
        echo $SERVICE_ACCOUNT | gcloud auth activate-service-account --key-file=-
        gcloud --quiet config set project $PROJECT_ID
        gcloud run deploy microservicio --image gcr.io/$PROJECT_ID/microservicio:latest --platform managed --region us-central1 --allow-unauthenticated

    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
